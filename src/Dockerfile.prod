# syntax=docker/dockerfile:1

# Stage 1: Build stage
ARG PYTHON_VERSION=3.10.12
FROM python:${PYTHON_VERSION}-slim AS builder

# Prevents Python from writing pyc files and buffering stdout/stderr
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1

WORKDIR /app

# Install build dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    && rm -rf /var/lib/apt/lists/*

# Copy and install Python dependencies
COPY requirements.txt .
RUN --mount=type=cache,target=/root/.cache/pip \
    python -m pip install --user --no-warn-script-location -r requirements.txt

# Stage 2: Runtime stage
FROM python:${PYTHON_VERSION}-slim AS runtime

# Create a non-privileged user
ARG UID=10001
RUN adduser \
    --disabled-password \
    --gecos "" \
    --home "/nonexistent" \
    --shell "/sbin/nologin" \
    --no-create-home \
    --uid "${UID}" \
    appuser

WORKDIR /app

# Copy installed Python dependencies from the builder stage
COPY --from=builder /root/.local /home/appuser/.local
COPY --chown=appuser:appuser . .

# Ensure scripts in .local are usable
ENV PATH=/home/appuser/.local/bin:$PATH

# Switch to the non-privileged user
USER appuser

# Expose the port that the application listens on
EXPOSE 8000

# Run the application
CMD ["gunicorn", "--bind", "0.0.0.0:8000", "config.wsgi:application"]
name: ekiosk-ci

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  
jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r src/requirements.txt
      
      - name: Create .env.prod file
        run: |
          cat <<EOL > .env.prod
          DEBUG=${{ secrets.DEBUG }}
          SECRET_KEY=${{ secrets.SECRET_KEY }}
          DJANGO_ALLOWED_HOSTS=${{ secrets.DJANGO_ALLOWED_HOSTS }}
          DB_ENGINE=${{ secrets.DB_ENGINE }}
          POSTGRES_DB=${{ secrets.POSTGRES_DB }}
          POSTGRES_USER=${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_HOST=${{ secrets.POSTGRES_HOST }}
          POSTGRES_PORT=${{ secrets.POSTGRES_PORT }}
          OIDC_RP_CLIENT_ID=${{ secrets.OIDC_RP_CLIENT_ID }}
          OIDC_RP_CLIENT_SECRET='${{ secrets.OIDC_RP_CLIENT_SECRET }}'
          OIDC_RP_SIGN_ALGO=${{ secrets.OIDC_RP_SIGN_ALGO }}
          ATSK_API_KEY=${{ secrets.ATSK_API_KEY }}
          DEFAULT_FROM_EMAIL=${{ secrets.DEFAULT_FROM_EMAIL }}
          EMAIL_HOST_PASSWORD=${{ secrets.EMAIL_HOST_PASSWORD }}
          EMAIL_HOST_USER=${{ secrets.EMAIL_HOST_USER }}
          EOL
      - name: Build and run Docker Compose
        run: |
          docker compose -f compose.prod.yaml --env-file .env.prod up -d --build

      
      - name: Wait for services to start
        run: sleep 30

      - name: Run tests
        run: |
          docker compose -f compose.prod.yaml exec -T api pytest -v

  push-to-dockerhub:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}" | docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} --password-stdin
      
      - name: Build Docker image
        run: |
          docker build -f src/Dockerfile.prod -t ekiosk-api src/
    
      - name: Tag and push Docker image
        run: |
          docker tag ekiosk-api ${{ secrets.DOCKER_HUB_USERNAME }}/ekiosk-api:latest
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/ekiosk-api:latest

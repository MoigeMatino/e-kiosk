services:
  api:
    build:
      context: ./src
    command: gunicorn --bind 0.0.0.0:8000 config.wsgi:application
    ports:
      - 8000:8000
    env_file:
      - .env.prod
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health/"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: always

  db:
    image: postgres:16
    restart: always
    volumes:
      - db-data:/var/lib/postgresql/data
    env_file:
      - .env.prod
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    

  redis:
    image: redis:6-alpine
    restart: always
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  celery_worker:
    build:
      context: ./src
    command: celery -A config.celery worker --loglevel=info
    depends_on:
      redis:
        condition: service_healthy
      db:
        condition: service_healthy
    env_file:
      - .env.prod
    restart: always
    healthcheck:
      test: ["CMD", "celery", "-A", "config", "status"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  db-data:
  redis-data: